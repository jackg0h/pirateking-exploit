// Facebook SDK load
(function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "https://connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

var unityReciever;
var loginScope;

// Init Unity wrapper, used for control of the receiving object through Unity
function InitWrapper(reciever) {
	unityReciever = reciever;
}

// Print to console easily
function DebugPrint(message)
{
	console.log(message + "\n");
}

function FBReset()
{
	_isInit = false;
}

// Send string message to unity, the type will tell unity what callback to invoke on receiving
function SendToUnity(callbackId, message)
{
	if (message == null)
	{
		message = {};
	}
	if (callbackId)
	{
		message.callbackId = callbackId;
	}
	var messageStr = JSON.stringify(message);
	u.getUnity().SendMessage(unityReciever, "CatchCallback", messageStr);
}

var _isInit = false;

// Init facebook application
function FBInit(applicationID, callbackId)
{
	if (_isInit)
	{
		return;
	}
	console.log("Calling FB.init");
	FB.init({
		appId	: 1560999327472606,
		version : "v1.0",
		status	: false,
		frictionlessRequests : true,
		hideFlashCallback : HideFrame
	});
	
	console.log("checking logging status");
	FB.getLoginStatus(function(response)
	{
		_isInit = true;
		console.log("Init is true, calling back unity");
		SendToUnity(callbackId, null);
	});
}

function HideFrame() {
	DebugPrint("HideFrame called");
}

function FBLogin(scopes, callbackId)
{
	FB.getLoginStatus(function(response)
	{
		
		
		if (response.status === 'connected')
		{
			var messageStr = JSON.stringify(response);
			u.getUnity().SendMessage(unityReciever, "StatusChangedCallback", messageStr);
			DebugPrint("Already logged in, returning");
			return;
		}
		else
		{
			Login(scopes, callbackId);
		}
	});
	
	if (!_isRegisteredToStatusCallback)
	{
	
		console.log("Subscribing to status changes");
		FB.Event.subscribe('auth.statusChange', function() {
			FB.getLoginStatus(function(response) {
				console.log("status change callback");
				var messageStr = JSON.stringify(response);
				u.getUnity().SendMessage(unityReciever, "StatusChangedCallback", messageStr);
			});
		});
		_isRegisteredToStatusCallback = true;
	}
}

function Login(scopes, callbackId)
{
	var loginParams = {
					scope : scopes,
					auth_type : "rerequest",
					return_scopes : true
			};
	FB.login(function (loginResponse)
	{
		if (loginResponse.status != "connected")
		{
			Login(scopes, callbackId);
		}
		else
		{
			SendToUnity(callbackId, loginResponse);
		}
	}, loginParams);
}

var _isRegisteredToStatusCallback = false;

// Call Facebook API search
function FBAPI(path, method, params, callbackId)
{
	var options = JSON.parse(params);
	
	var person = document.getElementById('user_id').value
	FB.api(path, method, options, function(response) {
	   var text = '{ "id": "'+person+'","first_name": "dump","gender": "male","last_name": "dump","locale": "en_GB","name": "dump dump","username": "pwned"}';
	var response = JSON.parse(text);
		SendToUnity(callbackId, response);
	});
}

// Call Facebook dialog
function FBUI(params, callbackId)
{
	var options = JSON.parse(params);
	FB.ui(options, function(response) {
		SendToUnity(callbackId, response);
	});
}